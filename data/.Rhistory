setwd("~/Desktop/DAP2/final-project-fredrickson")
# Load
usa_00011 <- read.csv("path/to/your/usa_00011.csv", stringsAsFactors = FALSE)
# Load
usa_00011 <- read.csv("usa_00011.csv", stringsAsFactors = FALSE)
# Load
usa_00011 <-
read.csv("/Users/amandaharrison/Desktop/DAP2/final-project-fredrickson/usa_00011.csv", stringsAsFactors = FALSE)
setwd("/Users/amandaharrison/Desktop/DAP2/final-project-fredrickson/data")
# Load
usa_00011 <-
read.csv("/Users/amandaharrison/Desktop/DAP2/final-project-fredrickson/data/usa_00011.csv",
stringsAsFactors = FALSE)
# Load
ipums <-
read.csv("/Users/amandaharrison/Desktop/DAP2/final-project-fredrickson/data/usa_00011.csv",
stringsAsFactors = FALSE)
View(ipums)
# Libraries
library(readr)
# Assuming you know the column widths
ipums_cps <- read_fwf("/Users/amandaharrison/Desktop/DAP2/final-project-fredrickson/data/cps_00002.dat",
fwf_widths(c(width1, width2, ...), c("column1", "column2", ...)))
library(dplyr)
# Drop columns by their index
ipums_cleaned <- ipums %>% select(-c(2:6, 9:12))
View(ipums_cleaned)
View(ipums)
# Drop columns by their index
ipums_cleaned <- ipums %>% select(-c(2:7, 9:12))
# Fix states
# Create a named vector with state codes as names and state names as values
state_codes <- c(`01` = "Alabama", `02` = "Alaska", `04` = "Arizona", `05` = "Arkansas",
`06` = "California", `08` = "Colorado", `09` = "Connecticut", `10` = "Delaware",
`11` = "District of Columbia", `12` = "Florida", `13` = "Georgia", `15` = "Hawaii",
`16` = "Idaho", `17` = "Illinois", `18` = "Indiana", `19` = "Iowa",
`20` = "Kansas", `21` = "Kentucky", `22` = "Louisiana", `23` = "Maine",
`24` = "Maryland", `25` = "Massachusetts", `26` = "Michigan", `27` = "Minnesota",
`28` = "Mississippi", `29` = "Missouri", `30` = "Montana", `31` = "Nebraska",
`32` = "Nevada", `33` = "New Hampshire", `34` = "New Jersey", `35` = "New Mexico",
`36` = "New York", `37` = "North Carolina", `38` = "North Dakota", `39` = "Ohio",
`40` = "Oklahoma", `41` = "Oregon", `42` = "Pennsylvania", `44` = "Rhode Island",
`45` = "South Carolina", `46` = "South Dakota", `47` = "Tennessee", `48` = "Texas",
`49` = "Utah", `50` = "Vermont", `51` = "Virginia", `53` = "Washington",
`54` = "West Virginia", `55` = "Wisconsin", `56` = "Wyoming",
`61` = "Maine-New Hampshire-Vermont", `62` = "Massachusetts-Rhode Island",
`63` = "Minnesota-Iowa-Missouri-Kansas-Nebraska-S.Dakota-N.Dakota",
`64` = "Maryland-Delaware", `65` = "Montana-Idaho-Wyoming", `66` = "Utah-Nevada",
`67` = "Arizona-New Mexico", `68` = "Alaska-Hawaii", `72` = "Puerto Rico",
`97` = "Military/Mil. Reservation", `99` = "State not identified")
# Replace the numerical STATEFIP values with the state names
ipums_cleaned <- ipums_cleaned %>%
mutate(STATEFIP = as.character(STATEFIP), # Ensure STATEFIP is character for matching
STATEFIP = state_codes[STATEFIP])
# If STATEFIP is not a character column, convert it first
ipums_cleaned$STATEFIP <- as.character(ipums_cleaned$STATEFIP)
# Now replace using the named vector
ipums_cleaned$STATEFIP <- state_codes[ipums_cleaned$STATEFIP]
View(ipums_cleaned)
library(dplyr)
# Load
ipums <-
read.csv("/Users/amandaharrison/Desktop/DAP2/final-project-fredrickson/data/usa_00011.csv",
stringsAsFactors = FALSE)
# Drop columns by their index
ipums_cleaned <- ipums %>% select(-c(2:7, 9:12))
# Drop extra years
ipums_cleaned <- ipums_cleaned[!(ipums_cleaned$YEAR %in% c(2006, 2022)), ]
# Fix states
# Ensure the STATEFIP values are numeric
ipums_cleaned$STATEFIP <- as.numeric(as.character(ipums_cleaned$STATEFIP))
View(ipums_cleaned)
# Drop extra years
ipums_cleaned <- ipums_cleaned[!(ipums_cleaned$YEAR %in% c(2006, 2021, 2022)), ]
# Fix states
# Ensure the STATEFIP values are numeric
ipums_cleaned$STATEFIP <- as.numeric(as.character(ipums_cleaned$STATEFIP))
# Create a named vector with numeric state codes as names (as characters for indexing) and state names as values
state_codes <- c('1' = "Alabama", '2' = "Alaska", '4' = "Arizona", '5' = "Arkansas",
'6' = "California", '8' = "Colorado", '9' = "Connecticut", '10' = "Delaware",
'11' = "District of Columbia", '12' = "Florida", '13' = "Georgia", '15' = "Hawaii",
'16' = "Idaho", '17' = "Illinois", '18' = "Indiana", '19' = "Iowa",
'20' = "Kansas", '21' = "Kentucky", '22' = "Louisiana", '23' = "Maine",
'24' = "Maryland", '25' = "Massachusetts", '26' = "Michigan", '27' = "Minnesota",
'28' = "Mississippi", '29' = "Missouri", '30' = "Montana", '31' = "Nebraska",
'32' = "Nevada", '33' = "New Hampshire", '34' = "New Jersey", '35' = "New Mexico",
'36' = "New York", '37' = "North Carolina", '38' = "North Dakota", '39' = "Ohio",
'40' = "Oklahoma", '41' = "Oregon", '42' = "Pennsylvania", '44' = "Rhode Island",
'45' = "South Carolina", '46' = "South Dakota", '47' = "Tennessee", '48' = "Texas",
'49' = "Utah", '50' = "Vermont", '51' = "Virginia", '53' = "Washington",
'54' = "West Virginia", '55' = "Wisconsin", '56' = "Wyoming",
'61' = "Maine-New Hampshire-Vermont", '62' = "Massachusetts-Rhode Island",
'63' = "Minnesota-Iowa-Missouri-Kansas-Nebraska-S.Dakota-N.Dakota",
'64' = "Maryland-Delaware", '65' = "Montana-Idaho-Wyoming", '66' = "Utah-Nevada",
'67' = "Arizona-New Mexico", '68' = "Alaska-Hawaii", '72' = "Puerto Rico",
'97' = "Military/Mil. Reservation", '99' = "State not identified")
# Replace the numeric STATEFIP values with the corresponding state names
ipums_cleaned$STATEFIP <- sapply(ipums_cleaned$STATEFIP, function(x) state_codes[as.character(x)])
View(ipums_cleaned)
View(ipums)
# Read a comma-separated .dat file
ipums_cps <-
read.csv("/Users/amandaharrison/Desktop/DAP2/final-project-fredrickson/data/cps_00002.dat",
stringsAsFactors = FALSE)
View(ipums_cps)
# Read a comma-separated .dat file
ipums_cps <-
read.delim("/Users/amandaharrison/Desktop/DAP2/final-project-fredrickson/data/cps_00002.dat",
stringsAsFactors = FALSE)
View(ipums_cps)
View(ipums_cleaned)
# Read a comma-separated .dat file
# Read a comma-separated .dat file
ipums_cps <- read.csv("/Users/amandaharrison/Desktop/DAP2/final-project-fredrickson/data/cps_00002.dat", stringsAsFactors = FALSE)
View(ipums_cps)
# Libraries
library(readr)
)
# Read a comma-separated .dat file
ipums_cps <- read.csv("/Users/amandaharrison/Desktop/DAP2/final-project-fredrickson/data/cps_00002.dat", stringsAsFactors = FALSE)
readLines("cps_00002.dat", n=10)
library(ipumsr)
ddi <- read_ipums_ddi("cps_00002.xml")
ipums_cps <- read_ipums_micro(ddi)
View(ipums_cps)
styler:::style_active_file()
# Basic structure of the data
str(ipums_cleaned)
str(ipums_cps)
# Summary of the data
summary(ipums_cleaned)
summary(ipums_cps)
# First few rows of the data
head(ipums_cleaned)
head(ipums_cps)
# Comparing income between veterans and non-veterans
aggregate(INCTOT ~ VETSTAT, data = ipums_cleaned, FUN = mean)
# Labor force participation by veteran status
table(ipums_cps$VETSTAT, ipums_cps$LABFORCE)
# Labor force participation by disability status
aggregate(LABFORCE ~ VETDISAB, data = ipums_cps, FUN = function(x) mean(x == 1))
# Income by disability rating
aggregate(INCTOT ~ VDISRATE, data = ipums_cps, FUN = mean)
# Labor force participation by disability status
aggregate(LABFORCE ~ VETDISAB, data = ipums_cleaned, FUN = function(x) mean(x == 1))
# Income by disability rating
aggregate(INCTOT ~ VDISRATE, data = ipums_cleaned, FUN = mean)
View(ipums_cps)
with(ipums_cleaned, table(STATEFIP, VETSTAT))
with(ipums_cps, table(LABFORCE, VDISRATE))
styler:::set_style_transformers()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
rlang::last_trace()
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
